version: '3'

volumes:
  mysql-data:
  postgresql-data:
  pgweb-data:
  mongodb-data:
  redis-data:

services:
  jupyter:
    links:
      - mysql
    build: .
    image: jupyter-treasure
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ../notebook:/notebook
      - ./init/python3/requirements.txt:/tmp/requirements.txt
      - ./config/jupyter_notebook_config.py:/root/.jupyter/jupyter_notebook_config.py
      - ./config/c-jupyter-kernel:/root/.local/share/jupyter/kernels/c
      - ./config/mysql/mysql_config.json:/root/.local/config/mysql_config.json
      - ./config/mysql-jupyter-kernel:/usr/local/share/jupyter/kernels/jupyter-mysql-kernel
    command: jupyter lab
    restart: always
    privileged: true

  mysql:
    image: mysql:8
    container_name: mysql
    volumes:
      - mysql-data:/var/lib/mysql
      - ./config/mysql/my.cnf:/etc/my.cnf
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: jupyter
      MYSQL_DATABASE: jupyter
      MYSQL_USER: root
      MYSQL_PASSWORD: jupyter
  # mysql GUI
  phpmyadmin:
    links:
      - mysql
    image: phpmyadmin/phpmyadmin:4.8.0-3
    container_name: mysqladmin
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql:3306
      PMA_USER: root
      PMA_PASSWORD: jupyter
    ports:
      - "8889:80"
    restart: always
  
  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_PASSWORD=jupyter
      - POSTGRES_USER=use
      - POSTGRES_DB=jupyter
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgresql-data:/var/lib/postgresql/data/pgdata
    restart: always
  # postgres GUI
  pgweb:
    image: sosedoff/pgweb
    container_name: pgweb
    ports:
      - "8890:8081"
    environment:
      - DATABASE_URL=postgres://use:jupyter@postgres:5432/postgres?sslmode=disable
    links:
      - postgres
    restart: always

  franchise-client:
    container_name: franchise-client
    image: "jsoizo/franchise-client"
    ports: 
      - "14645:14645"
    links:
      - mysql
      - postgres
    restart: always
  # franchise GUI
  franchise-web:
    container_name: franchise-web
    image: "jsoizo/franchise"
    ports: 
      - "8891:80"
    restart: always

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongodb-data:/data/db
    restart: always
  # mongodb GUI
  mongo-admin:
    image: mrvautin/adminmongo
    container_name: mongo-admin
    links:
      - mongodb
    ports:
      - "8892:1234"
    environment:
      - DB_USERNAME=user
      - DB_PASSWORD=example
      - DB_HOST=mongodb
      - DB_PORT=27017
    restart: always

  redis:
    image: redis
    container_name: redis
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: always
  # redis GUI
  redis-rebrow:
    image: marian/rebrow
    container_name: redis-rebrow
    ports:
      - "8893:5001"
    links:
      - redis
    restart: always
    